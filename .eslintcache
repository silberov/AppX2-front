[{"/Users/innaz/wild/appx2/frontend/src/index.js":"1","/Users/innaz/wild/appx2/frontend/src/App.js":"2","/Users/innaz/wild/appx2/frontend/src/reportWebVitals.js":"3","/Users/innaz/wild/appx2/frontend/src/pages/login.js":"4","/Users/innaz/wild/appx2/frontend/src/pages/register.js":"5","/Users/innaz/wild/appx2/frontend/src/components/applicationCard.js":"6","/Users/innaz/wild/appx2/frontend/src/pages/allApplications.js":"7","/Users/innaz/wild/appx2/frontend/src/pages/addApplication.js":"8","/Users/innaz/wild/appx2/frontend/src/components/selectComp.js":"9","/Users/innaz/wild/appx2/frontend/src/components/addNewComp.js":"10","/Users/innaz/wild/appx2/frontend/src/pages/addApplication2.js":"11"},{"size":500,"mtime":1612350372732,"results":"12","hashOfConfig":"13"},{"size":1086,"mtime":1612474622024,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1612350372733,"results":"15","hashOfConfig":"13"},{"size":1499,"mtime":1612455535853,"results":"16","hashOfConfig":"13"},{"size":2466,"mtime":1612448363010,"results":"17","hashOfConfig":"13"},{"size":1530,"mtime":1612475244651,"results":"18","hashOfConfig":"13"},{"size":1324,"mtime":1612470771216,"results":"19","hashOfConfig":"13"},{"size":2826,"mtime":1612475131210,"results":"20","hashOfConfig":"13"},{"size":1437,"mtime":1612471568096,"results":"21","hashOfConfig":"13"},{"size":369,"mtime":1612470549481,"results":"22","hashOfConfig":"13"},{"size":2821,"mtime":1612476004997,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kqswp8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/innaz/wild/appx2/frontend/src/index.js",[],["52","53"],"/Users/innaz/wild/appx2/frontend/src/App.js",["54"],"import \"./App.css\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { AllApplications } from \"./pages/allApplications\";\nimport AddApplication1 from \"./pages/addApplication\";\nimport AddApplication2 from \"./pages/addApplication2\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [application, setApplication] = useState(null);\n  console.log(application);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/all\">\n            <AllApplications />\n          </Route>\n          <Route path=\"/add/1\">\n            <AddApplication1 getApp={(app) => setApplication(app)} />\n          </Route>\n          <Route path=\"/add/2\">\n            <AddApplication2 application={application} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/innaz/wild/appx2/frontend/src/reportWebVitals.js",[],"/Users/innaz/wild/appx2/frontend/src/pages/login.js",[],"/Users/innaz/wild/appx2/frontend/src/pages/register.js",[],"/Users/innaz/wild/appx2/frontend/src/components/applicationCard.js",["55","56","57"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction ApplicationCard({ data, onDelete }) {\n  // console.log(\"data card\", data);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        textAlign: \"left\",\n        borderBottom: \"1px solid #000\",\n      }}\n    >\n      {data.company.logo && (\n        <img\n          style={{\n            display: \"inline-block\",\n            width: \"130px\",\n            height: \"130px\",\n            background: \"gray\",\n          }}\n          src={data.company.logo}\n          alt={`${data.company?.name} logo`}\n        />\n      )}\n      <div>\n        <Link to={`${data.company.homepage}`}>{data.company.name}</Link>\n        <br />\n        {data.linkToPosting ? (\n          <Link to={`${data.linkToPosting}`}>{data.position}</Link>\n        ) : (\n          <p>{data.position}</p>\n        )}\n      </div>\n      <div>\n        <p>Status: {data.Status?.name}</p>\n        {/* <select>{data.Status.name}</select> */}\n        <p>{data.UpdatedAt}</p>\n      </div>\n      <div>\n        {data.linkToCV && <Link to={`${data.linkToCV}`}>CV</Link>}\n        <br />\n        {data.linkToLetter && (\n          <Link to={`${data.linkToLetter}`}>Cover Letter</Link>\n        )}\n      </div>\n      <div>\n        <textarea defaultValue={data.notes} />\n      </div>\n      <div>\n        <button>edit</button>\n        <button onClick={() => onDelete(data.id)}>delete</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ApplicationCard;\n","/Users/innaz/wild/appx2/frontend/src/pages/allApplications.js",["58"],"import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ApplicationCard from \"../components/applicationCard\";\n\nexport function AllApplications() {\n  const [applications, setApplications] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/application/\")\n      .then((response) => response.json())\n      .then((data) => setApplications(data));\n    setTimeout(() => console.log(\"data\", applications), 1500);\n  }, []);\n\n  const heandleDelete = (id) => {\n    console.log(\"delete\", id);\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    fetch(`http://localhost:3000/api/application/${id}`, requestOptions)\n      .then((response) => response.json())\n      .then(\n        (deleted) => console.log(deleted)\n        // setApplications(applications.filter((item) => item.id !== id))\n      );\n  };\n\n  return (\n    <div>\n      {redirect && <Redirect to=\"/add/1\" />}\n      {applications &&\n        applications.map((item) => (\n          <ApplicationCard data={item} onDelete={(id) => heandleDelete(id)} />\n        ))}\n      <button\n        onClick={() => {\n          setRedirect(true);\n        }}\n      >\n        add New\n      </button>\n    </div>\n  );\n}\n","/Users/innaz/wild/appx2/frontend/src/pages/addApplication.js",["59","60","61"],"import { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport AddNewCompany from \"../components/addNewComp\";\nimport SelectCompany from \"../components/selectComp\";\n\nfunction CompanyZone({ newCompany }) {\n  return <>{newCompany ? <AddNewCompany /> : <SelectCompany />}</>;\n}\n\nfunction AddApplication1({ getApp }) {\n  console.log(getApp);\n  const [companyId, setCompanyId] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [posting, setPosting] = useState(\"\");\n  const [statusId, setStatusId] = useState(0);\n  const [statusList, setStatusList] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n\n  const getList = () => {\n    fetch(\"http://localhost:3000/api/status\")\n      .then((response) => response.json())\n      .then((data) => setStatusList(data));\n    setStatusId(statusList[0]);\n  };\n\n  const heandleSubmit = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        companyId: companyId,\n        position: position,\n        linkToPosting: posting,\n        statusId: statusId,\n        linkToLetter: \"\",\n        linkToCV: \"\",\n        notes: \"\",\n      }),\n    };\n    fetch(`http://localhost:3000/api/application/`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => getApp(data))\n      .then(setRedirect(true));\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n  // useEffect(() => {\n  //   setSelected(copmanyList.find((item) => item.id === Number(selectedId)));\n  // }, [selectedId]);\n  console.log(\"companyId\", companyId);\n  return (\n    <>\n      {redirect && <Redirect to=\"/add/2\" />}\n      <p>\n        <strong>Company</strong> - Application\n      </p>\n      <form onSubmit={(e) => heandleSubmit(e)}>\n        {/* <button onClick={() => heandleTogel(!newCompany)}>Add new</button> */}\n        <SelectCompany onCompany={setCompanyId} />\n\n        <label>\n          Position:\n          <input\n            type=\"text\"\n            value={position}\n            onChange={(e) => setPosition(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Link:\n          <input\n            type=\"text\"\n            value={posting}\n            onChange={(e) => setPosting(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          status:\n          <select\n            value={statusId}\n            onChange={(e) => setStatusId(Number(e.target.value))}\n          >\n            {statusList.map((item) => (\n              <option value={Number(item.id)}>{item.name}</option>\n            ))}\n          </select>\n        </label>\n\n        <br />\n        <input type=\"submit\" value=\"Next\" />\n      </form>\n    </>\n  );\n}\n\nexport default AddApplication1;\n","/Users/innaz/wild/appx2/frontend/src/components/selectComp.js",["62","63"],"import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SelectCompany(props) {\n  const [copmanyList, setCopmanyList] = useState([]);\n  const [selectedId, setSelectedId] = useState(0);\n  const [selected, setSelected] = useState(\"\");\n  const getList = () => {\n    fetch(\"http://localhost:3000/api/company\")\n      .then((response) => response.json())\n      .then((data) => setCopmanyList(data));\n    setSelected(copmanyList[0]);\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n  useEffect(() => {\n    setSelected(copmanyList.find((item) => item.id === Number(selectedId)));\n    props.onCompany(Number(selectedId));\n  }, [selectedId]);\n  //console.log(props.onCompany);\n\n  return (\n    <div style={{ width: \"500px\", margin: \"auto\" }}>\n      {selected && (\n        <img\n          style={{\n            height: \"100px\",\n            width: \"100px\",\n          }}\n          src={selected.logo}\n          alt={selected.name}\n        />\n      )}\n      <div>\n        {selected && <Link to={selected.homepage}>{selected.name}</Link>}\n        <br />\n        <select\n          value={selectedId}\n          onChange={(e) => setSelectedId(e.target.value)}\n        >\n          {copmanyList.map((item) => (\n            <option value={item.id}>{item.name}</option>\n          ))}\n        </select>\n        {/* <button onClick={() => onAddNew(true)}>add new</button> */}\n      </div>\n    </div>\n  );\n}\n","/Users/innaz/wild/appx2/frontend/src/components/addNewComp.js",[],"/Users/innaz/wild/appx2/frontend/src/pages/addApplication2.js",["64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":50,"nodeType":"74","messageId":"75","endLine":4,"endColumn":54},{"ruleId":"72","severity":1,"message":"76","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":33},{"ruleId":"72","severity":1,"message":"77","line":1,"column":35,"nodeType":"74","messageId":"75","endLine":1,"endColumn":41},{"ruleId":"72","severity":1,"message":"78","line":1,"column":43,"nodeType":"74","messageId":"75","endLine":1,"endColumn":48},{"ruleId":"79","severity":1,"message":"80","line":13,"column":6,"nodeType":"81","endLine":13,"endColumn":8,"suggestions":"82"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"83","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":49,"column":6,"nodeType":"81","endLine":49,"endColumn":8,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"84","line":17,"column":6,"nodeType":"81","endLine":17,"endColumn":8,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"87","line":21,"column":6,"nodeType":"81","endLine":21,"endColumn":18,"suggestions":"88"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"83","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":21},{"ruleId":"72","severity":1,"message":"89","line":16,"column":20,"nodeType":"74","messageId":"75","endLine":16,"endColumn":31},{"ruleId":"79","severity":1,"message":"84","line":47,"column":6,"nodeType":"81","endLine":47,"endColumn":8,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'applications'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'CompanyZone' is defined but never used.","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["94"],["95"],"React Hook useEffect has missing dependencies: 'copmanyList' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["96"],"'setRedirect' is assigned a value but never used.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"100","fix":"102"},{"desc":"103","fix":"104"},{"desc":"100","fix":"105"},"Update the dependencies array to be: [applications]",{"range":"106","text":"107"},"Update the dependencies array to be: [getList]",{"range":"108","text":"109"},{"range":"110","text":"109"},"Update the dependencies array to be: [copmanyList, props, selectedId]",{"range":"111","text":"112"},{"range":"113","text":"109"},[524,526],"[applications]",[1488,1490],"[getList]",[527,529],[675,687],"[copmanyList, props, selectedId]",[1381,1383]]